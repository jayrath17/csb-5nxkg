{"version":3,"sources":["components/top.js","components/form.js","components/history.js","components/App.js","store/index.js","index.js"],"names":["connect","state","console","log","my","myState","props","hist","useSelector","store","nameReducer","lisst","incc","decc","map","e","Number","Amount","Expense","className","renderField","input","type","label","meta","touched","error","warning","style","color","fontSize","reduxForm","form","validate","values","errors","length","handleSubmit","pristine","submitting","onSubmit","Field","name","component","placeholder","disabled","a","statte","data","renderDataItems","App","dispatch","useDispatch","initialState","income","expense","combineReducers","formReducer","action","ReactDOM","render","createStore","document","getElementById"],"mappings":"wMAoCeA,eAJS,SAACC,GAEvB,OADAC,QAAQC,IAAI,IAAKF,GACV,CAAEG,GAAIH,EAAMI,WAENL,EAlCH,SAACM,GACX,IAAMC,EAAOC,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYC,SAClDC,EAAO,EACPC,EAAO,EASX,OARAN,EAAKO,KAAI,SAACC,GAMR,OALIC,OAAOD,EAAEE,QAAU,EACrBL,GAAcI,OAAOD,EAAEE,QAEvBJ,GAAcG,OAAOD,EAAEE,QAElBf,QAAQC,IAAI,OAAQY,EAAEG,QAASF,OAAOD,EAAEE,QAASL,EAAMC,MAG9D,gCACE,8CACA,qCAAQD,EAAOC,KAEf,sBAAKM,UAAU,oBAAf,UACE,gCACE,wCACA,oBAAGA,UAAU,aAAb,kBAAgCP,QAElC,gCACE,yCACA,oBAAGO,UAAU,cAAb,iBAAgCN,iB,0BCVpCO,G,MAAc,SAAC,GAAD,IAClBC,EADkB,EAClBA,MAEAC,GAHkB,EAElBC,MAFkB,EAGlBD,MAHkB,IAIlBE,KAAQC,EAJU,EAIVA,QAASC,EAJC,EAIDA,MAAOC,EAJN,EAIMA,QAJN,OAMlB,sBAAKR,UAAU,eAAf,UACE,iDAAWE,GAAX,IAAkBC,KAAMA,KACvBG,IACGC,GACA,sBAAMP,UAAU,cAAcS,MAAO,CAAEC,MAAO,MAAOC,SAAU,KAA/D,SACGJ,KAGFC,GAAW,+BAAOA,UAgCZI,kBAAU,CACvBC,KAAM,OACNC,SA5De,SAACC,GAChB,IAAMC,EAAS,GASf,OARKD,EAAOhB,QAEDgB,EAAOhB,QAAQkB,OAAS,IACjCD,EAAOjB,QAAU,mCAFjBiB,EAAOjB,QAAU,WAIdgB,EAAOjB,SACVkB,EAAOlB,OAAS,YAEXkB,IAgDMJ,EA5Bf,SAAczB,GACZ,IAAQ+B,EAAuC/B,EAAvC+B,aAAcC,EAAyBhC,EAAzBgC,SAAUC,EAAejC,EAAfiC,WAChC,OACE,uBAAMC,SAAUH,EAAhB,UACE,sBAAKlB,UAAU,eAAf,UACE,qDACA,cAACsB,EAAA,EAAD,CACEC,KAAK,UACLC,UAAWvB,EACXE,KAAK,OACLsB,YAAY,6BAGhB,sBAAKzB,UAAU,eAAf,UACE,iDACA,cAACsB,EAAA,EAAD,CACEC,KAAK,SACLC,UAAWvB,EACXE,KAAK,SACLsB,YAAY,oBAGhB,wBAAQzB,UAAU,MAAMG,KAAK,SAASuB,SAAUP,GAAYC,EAA5D,uCCrBSO,EADL9C,aAJc,SAACC,GACvB,MAAO,CAAEA,MAAOA,EAAM8C,UAGd/C,EA9BE,SAACM,GACX,IAAM0C,EAAOxC,aAAY,SAACC,GAAD,OAAWA,EAAMC,YAAYC,SACtDT,QAAQC,IAAI,OAAQ6C,GACpB,IAAMC,EAAkBD,EAAKlC,KAAI,SAACC,GAChCb,QAAQC,IAAI,aAAca,OAAOD,EAAEE,SAGnC,OACE,qBAAoBE,UAAWH,OAAOD,EAAEE,QAAU,EAHtC,OACC,QAEb,UACGF,EAAEG,QACH,+BAAOH,EAAEE,WAFFF,EAAEG,YAWf,OACE,8BACE,oBAAIC,UAAU,OAAd,SAAsB8B,SCGbC,EAtBH,WACV,IAAMC,EAAWC,cAKjB,OACE,qBAAKjC,UAAU,oBAAf,SACE,sBAAKA,UAAU,KAAf,UACE,iDACA,8BACE,cAAC,EAAD,MAEF,yCACA,cAAC,EAAD,IACA,qDACA,cAAC,EAAD,CAAMqB,SAdO,SAACzB,GAClBb,QAAQC,IAAI,aAAcY,GAC1BoC,EAAS,CAAE7B,KAAM,MAAO0B,KAAMjC,a,iBCR5BsC,EAAe,CAAEC,OAAQ,EAAGC,QAAS,EAAG5C,MAAO,IA2BtC6C,cAAgB,CAC7BxB,KAAMyB,IACN/C,YA5ByB,WAAmC,IAAlCT,EAAiC,uDAAzBoD,EAAcK,EAAW,uCAC3D,MAAoB,QAAhBA,EAAOpC,KACF,CACLgC,OAAQrD,EAAMqD,OAAS,EACvBC,QAAStD,EAAMsD,QACf5C,MAAOV,EAAMU,OAGG,QAAhB+C,EAAOpC,KACF,CACLiC,QAAStD,EAAMsD,QAAU,EACzBD,OAAQrD,EAAMqD,OACd3C,MAAOV,EAAMU,OAGG,QAAhB+C,EAAOpC,KACF,2BACFrB,GADL,IAEEU,MAAM,GAAD,mBAAMV,EAAMU,OAAZ,CAAmB+C,EAAOV,OAC/BO,QAAStD,EAAMsD,QACfD,OAAQrD,EAAMqD,SAGXrD,KCpBT0D,IAASC,OACP,cAAC,IAAD,CAAUnD,MAAOoD,YAAYpD,GAA7B,SACE,cAAC,EAAD,MAEFqD,SAASC,eAAe,U","file":"static/js/main.970b95c1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nconst Top = (props) => {\r\n  const hist = useSelector((store) => store.nameReducer.lisst);\r\n  let incc = 0;\r\n  let decc = 0;\r\n  hist.map((e) => {\r\n    if (Number(e.Amount) > 0) {\r\n      incc = incc + Number(e.Amount);\r\n    } else {\r\n      decc = decc - Number(e.Amount);\r\n    }\r\n    return console.log(\"hist\", e.Expense, Number(e.Amount), incc, decc);\r\n  });\r\n  return (\r\n    <div>\r\n      <h4>Your Balance</h4>\r\n      <h1>Rs {incc - decc}</h1>\r\n\r\n      <div className=\"inc-exp-container\">\r\n        <div>\r\n          <h4>INCOME</h4>\r\n          <p className=\"money plus\">+ Rs {incc}</p>\r\n        </div>\r\n        <div>\r\n          <h4>EXPENSE</h4>\r\n          <p className=\"money minus\"> Rs {decc}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => {\r\n  console.log(\"a\", state);\r\n  return { my: state.myState };\r\n};\r\nexport default connect(mapStateToProps)(Top);\r\n","import { Field, reduxForm } from \"redux-form\";\r\nimport React from \"react\";\r\nimport \"../styles.css\";\r\n// Validation---------------------------------\r\nconst validate = (values) => {\r\n  const errors = {};\r\n  if (!values.Expense) {\r\n    errors.Expense = \"Required\";\r\n  } else if (values.Expense.length < 2) {\r\n    errors.Expense = \"Minimum be 2 characters or more\";\r\n  }\r\n  if (!values.Amount) {\r\n    errors.Amount = \"Required\";\r\n  }\r\n  return errors;\r\n};\r\nconst renderField = ({\r\n  input,\r\n  label,\r\n  type,\r\n  meta: { touched, error, warning }\r\n}) => (\r\n  <div className=\"form-control\">\r\n    <input {...input} type={type} />\r\n    {touched &&\r\n      ((error && (\r\n        <span className=\"text-danger\" style={{ color: \"red\", fontSize: \"1\" }}>\r\n          {error}\r\n        </span>\r\n      )) ||\r\n        (warning && <span>{warning}</span>))}\r\n  </div>\r\n);\r\n// -------------------------------------------\r\nfunction Form(props) {\r\n  const { handleSubmit, pristine, submitting } = props;\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div className=\"form-control\">\r\n        <label>Expense / Income</label>\r\n        <Field\r\n          name=\"Expense\"\r\n          component={renderField}\r\n          type=\"text\"\r\n          placeholder=\"Expense/Income Name..\"\r\n        />\r\n      </div>\r\n      <div className=\"form-control\">\r\n        <label>Enter Amount</label>\r\n        <Field\r\n          name=\"Amount\"\r\n          component={renderField}\r\n          type=\"number\"\r\n          placeholder=\"amount in Rs\"\r\n        />\r\n      </div>\r\n      <button className=\"btn\" type=\"submit\" disabled={pristine || submitting}>\r\n        Add New Transaction\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\nexport default reduxForm({\r\n  form: \"Form\",\r\n  validate\r\n})(Form);\r\n","import React from \"react\";\r\nimport { connect, useSelector } from \"react-redux\";\r\nimport \"../styles.css\";\r\n\r\nconst Abc = (props) => {\r\n  const data = useSelector((store) => store.nameReducer.lisst);\r\n  console.log(\"data\", data);\r\n  const renderDataItems = data.map((e) => {\r\n    console.log(\"now\", typeof Number(e.Amount));\r\n    const pluss = \"plus\";\r\n    const minuss = \"minus\";\r\n    return (\r\n      <li key={e.Expense} className={Number(e.Amount) > 0 ? pluss : minuss}>\r\n        {e.Expense}\r\n        <span>{e.Amount}</span>\r\n        {/* <span>\r\n          <button className=\"delbtn\">\r\n            <b>X</b>\r\n          </button>\r\n        </span> */}\r\n      </li>\r\n    );\r\n  });\r\n  return (\r\n    <div>\r\n      <ol className=\"list\">{renderDataItems}</ol>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { state: state.statte };\r\n};\r\n\r\nconst a = connect(mapStateToProps)(Abc);\r\nexport default a;\r\n","import React from \"react\";\nimport Top from \"./top\";\nimport Form from \"./form\";\nimport History from \"./history\";\nimport { useDispatch } from \"react-redux\";\nimport \"../styles.css\";\nconst App = () => {\n  const dispatch = useDispatch();\n  const formSubmit = (e) => {\n    console.log(\"formsubmit\", e);\n    dispatch({ type: \"add\", data: e });\n  };\n  return (\n    <div className=\"ui container grid\">\n      <div className=\"ol\">\n        <h2>Expense Tracker</h2>\n        <div>\n          <Top />\n        </div>\n        <h4>History</h4>\n        <History />\n        <h4>Add New Transaction</h4>\n        <Form onSubmit={formSubmit} />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nconst initialState = { income: 0, expense: 0, lisst: [] };\r\nexport const nameReducer = (state = initialState, action) => {\r\n  if (action.type === \"inc\") {\r\n    return {\r\n      income: state.income + 1,\r\n      expense: state.expense,\r\n      lisst: state.lisst\r\n    };\r\n  }\r\n  if (action.type === \"dec\") {\r\n    return {\r\n      expense: state.expense + 1,\r\n      income: state.income,\r\n      lisst: state.lisst\r\n    };\r\n  }\r\n  if (action.type === \"add\") {\r\n    return {\r\n      ...state,\r\n      lisst: [...state.lisst, action.data],\r\n      expense: state.expense,\r\n      income: state.income\r\n    };\r\n  }\r\n  return state;\r\n};\r\n\r\nexport default combineReducers({\r\n  form: formReducer,\r\n  nameReducer: nameReducer\r\n});\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport App from \"./components/App\";\nimport store from \"./store\";\nReactDOM.render(\n  <Provider store={createStore(store)}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}